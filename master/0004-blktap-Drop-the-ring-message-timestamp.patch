From 8169b25dbe213a68e093a4cae9d524d062bbf2e1 Mon Sep 17 00:00:00 2001
From: Daniel Stodden <daniel.stodden@citrix.com>
Date: Wed, 2 Mar 2011 19:52:56 -0800
Subject: [PATCH 04/11] blktap: Drop the ring message timestamp.

Using gettimeofday() seems overkill. The debug node now just dumps
struct request age at jiffy resolution, not time of ring
submission. Looks ok because we never really differentiated from block
request time anyway.

Signed-off-by: Daniel Stodden <daniel.stodden@citrix.com>
---
 drivers/block/blktap/blktap.h |    1 -
 drivers/block/blktap/ring.c   |    8 +++-----
 2 files changed, 3 insertions(+), 6 deletions(-)

diff --git a/drivers/block/blktap/blktap.h b/drivers/block/blktap/blktap.h
index 794e676..e0f7d99 100644
--- a/drivers/block/blktap/blktap.h
+++ b/drivers/block/blktap/blktap.h
@@ -78,7 +78,6 @@ struct blktap_request {
 	int                            usr_idx;
 
 	int                            operation;
-	struct timeval                 time;
 
 	struct scatterlist             sg_table[BLKTAP_SEGMENT_MAX];
 	struct page                   *pages[BLKTAP_SEGMENT_MAX];
diff --git a/drivers/block/blktap/ring.c b/drivers/block/blktap/ring.c
index de93b10..71cbeba 100644
--- a/drivers/block/blktap/ring.c
+++ b/drivers/block/blktap/ring.c
@@ -304,8 +304,6 @@ blktap_ring_submit_request(struct blktap *tap,
 	}
 
 	ring->ring.req_prod_pvt++;
-
-	do_gettimeofday(&request->time);
 }
 
 static int
@@ -547,20 +545,20 @@ blktap_ring_debug(struct blktap *tap, char *buf, size_t size)
 
 	for (usr_idx = 0; usr_idx < BLKTAP_RING_SIZE; usr_idx++) {
 		struct blktap_request *request;
-		struct timeval *time;
+		struct timeval t;
 
 		request = ring->pending[usr_idx];
 		if (!request)
 			continue;
 
-		time  = &request->time;
+		jiffies_to_timeval(jiffies - request->rq->start_time, &t);
 
 		s += snprintf(s, end - s,
 			      "%02d: usr_idx:%02d "
 			      "op:%x nr_pages:%02d time:%lu.%09lu\n",
 			      usr_idx, request->usr_idx,
 			      request->operation, request->nr_pages,
-			      time->tv_sec, time->tv_usec);
+			      t.tv_sec, t.tv_usec);
 	}
 
 	s += snprintf(s, end - s, "end pending\n");
-- 
1.7.4.1

