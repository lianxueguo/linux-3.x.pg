diff --git a/drivers/net/xen-netback/interface.c b/drivers/net/xen-netback/interface.c
index b1ec0dc..37c47cd 100644
--- a/drivers/net/xen-netback/interface.c
+++ b/drivers/net/xen-netback/interface.c
@@ -100,6 +100,8 @@ static irqreturn_t xenvif_rx_interrupt(int irq, void *dev_id)
 	struct xenvif *vif = dev_id;
 
 	vif->rx_event = true;
+	mb();
+
 	xenvif_kick_thread(vif);
 
 	return IRQ_HANDLED;
@@ -144,6 +146,7 @@ static int xenvif_start_xmit(struct sk_buff *skb, struct net_device *dev)
 		xenvif_stop_queue(vif);
 
 	skb_queue_tail(&vif->rx_queue, skb);
+
 	xenvif_kick_thread(vif);
 
 	return NETDEV_TX_OK;
@@ -423,6 +426,11 @@ int xenvif_connect(struct xenvif *vif, unsigned long tx_ring_ref,
 
 	vif->task = task;
 
+	vif->rx_event =true;
+	mb();
+
+	xenvif_kick_thread(vif);
+
 	rtnl_lock();
 	if (!vif->can_sg && vif->dev->mtu > ETH_DATA_LEN)
 		dev_set_mtu(vif->dev, ETH_DATA_LEN);
diff --git a/drivers/net/xen-netback/netback.c b/drivers/net/xen-netback/netback.c
index 5a10c51..d7d95a2 100644
--- a/drivers/net/xen-netback/netback.c
+++ b/drivers/net/xen-netback/netback.c
@@ -1738,12 +1738,21 @@ err:
 
 void xenvif_stop_queue(struct xenvif *vif)
 {
-	if (vif->can_queue)
-		netif_stop_queue(vif->dev);
+	if (!vif->can_queue || netif_queue_stopped(vif->dev))
+		return;
+
+	netdev_printk(KERN_INFO, vif->dev, "stopping queue\n");
+
+	netif_stop_queue(vif->dev);
 }
 
 static void xenvif_start_queue(struct xenvif *vif)
 {
+	if (!netif_queue_stopped(vif->dev))
+		return;
+
+	netdev_printk(KERN_INFO, vif->dev, "starting queue\n");
+
 	if (xenvif_schedulable(vif))
 		netif_wake_queue(vif->dev);
 }
@@ -1765,6 +1774,8 @@ int xenvif_kthread(void *data)
 			xenvif_rx_action(vif);
 
 		vif->rx_event = false;
+		mb();
+
 		if (xenvif_rx_ring_slots_available(vif, threshold))
 			xenvif_start_queue(vif);
 
